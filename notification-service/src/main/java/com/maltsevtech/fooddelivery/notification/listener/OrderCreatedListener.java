package com.maltsevtech.fooddelivery.notification.listener;

import com.maltsevtech.fooddelivery.notification.dto.OrderDTO;
import lombok.extern.slf4j.Slf4j;
import org.springframework.kafka.annotation.KafkaListener;
import org.springframework.messaging.handler.annotation.Payload;
import org.springframework.stereotype.Service;

@Slf4j
@Service
public class OrderCreatedListener {

    @KafkaListener(topics = "order_created", groupId = "notification-group", containerFactory = "kafkaListenerContainerFactory")
    public void listen(@Payload OrderDTO order) { // ‚úÖ –¢–µ–ø–µ—Ä—å —Å–ª—É—à–∞–µ–º JSON
        try {
            log.info("üì¶ –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω! ID: {}", order.getId());

            // –õ–æ–≥–∏–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ Email/SMS
            sendNotification(order);

        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–∫–∞–∑–∞ ID: {}", order.getId(), e);
        }
    }

    private void sendNotification(OrderDTO order) {
        log.info("‚úâÔ∏è –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–∫–∞–∑–µ ID: {} –∫–ª–∏–µ–Ω—Ç—É {}", order.getId(), order.getUserId());
    }
}
